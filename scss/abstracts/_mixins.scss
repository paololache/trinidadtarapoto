

// Responsive breakpoints
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-sm - 1}) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: #{$breakpoint-sm}) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: #{$breakpoint-md}) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: #{$breakpoint-lg}) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: #{$breakpoint-xl}) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (min-width: #{$breakpoint-2xl}) {
      @content;
    }
  }
}

// Flexbox utilities
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid utilities
@mixin grid($columns: 1, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Typography utilities
@mixin font-style($size: $font-size-base, $weight: $font-weight-regular, $line-height: $line-height-normal, $color: $color-text) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  color: $color;
}

// Buttons and interactive elements
@mixin btn-base {
  display: inline-block;
  font-family: $font-primary;
  font-weight: $font-weight-medium;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  padding: $spacing-sm $spacing-lg;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  border-radius: $border-radius-md;
  transition: all $transition-normal;
  cursor: pointer;
  
  &:hover, &:focus {
    text-decoration: none;
    outline: none;
  }
}

// Transition
@mixin transition($property: all, $duration: $transition-normal, $timing: ease, $delay: 0s) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing;
  transition-delay: $delay;
}

// Cards and containers
@mixin card-base {
  background-color: $color-white;
  border-radius: $border-radius-md;
  box-shadow: $shadow-md;
  overflow: hidden;
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Truncate text with ellipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Container
@mixin container {
  width: 100%;
  padding-right: $container-padding-x;
  padding-left: $container-padding-x;
  margin-right: auto;
  margin-left: auto;
  
  @include respond-to(sm) {
    max-width: $container-max-width-sm;
  }
  
  @include respond-to(md) {
    max-width: $container-max-width-md;
  }
  
  @include respond-to(lg) {
    max-width: $container-max-width-lg;
  }
  
  @include respond-to(xl) {
    max-width: $container-max-width-xl;
  }
  
  @include respond-to(2xl) {
    max-width: $container-max-width-2xl;
  }
}

// Flexbox utilities
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid utilities
@mixin grid($columns: 1, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Typography utilities
@mixin font-style($size: $font-size-base, $weight: $font-weight-regular, $line-height: $line-height-normal, $color: $color-text) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  color: $color;
}

// Buttons and interactive elements
@mixin btn-base {
  display: inline-block;
  font-family: $font-primary;
  font-weight: $font-weight-medium;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  padding: $spacing-sm $spacing-lg;
  font-size: $font-size-base;
  line-height: $line-height-normal;
  border-radius: $border-radius-md;
  transition: all $transition-normal;
  cursor: pointer;
  
  &:hover, &:focus {
    text-decoration: none;
    outline: none;
  }
}

// Transition
@mixin transition($property: all, $duration: $transition-normal, $timing: ease, $delay: 0s) {
  transition-property: $property;
  transition-duration: $duration;
  transition-timing-function: $timing;
  transition-delay: $delay;
}

// Cards and containers
@mixin card-base {
  background-color: $color-white;
  border-radius: $border-radius-md;
  box-shadow: $shadow-md;
  overflow: hidden;
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

// Truncate text with ellipsis
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Container
@mixin container {
  width: 100%;
  padding-right: $container-padding-x;
  padding-left: $container-padding-x;
  margin-right: auto;
  margin-left: auto;
  
  @include respond-to(sm) {
    max-width: $container-max-width-sm;
  }
  
  @include respond-to(md) {
    max-width: $container-max-width-md;
  }
  
  @include respond-to(lg) {
    max-width: $container-max-width-lg;
  }
  
  @include respond-to(xl) {
    max-width: $container-max-width-xl;
  }
  
  @include respond-to(2xl) {
    max-width: $container-max-width-2xl;
  }
}
